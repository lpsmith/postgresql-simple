Main.hs is a small wrapper around HUnit that opens a database connection and
starts the HUnit text-based test controller.

To add a new module to the test suite, do the following:

 * Create a new module that exports a function of type TestEnv -> Test.
   For example:

        module Foo (testFoo) where

        import Common

        testFoo :: TestEnv -> Test
        testFoo TestEnv{..} = ...

   'TestEnv' (defined in Common.hs) contains information for accessing the
   database.  `TestEnv{..}` is a record wildcard which brings the following
   definitions into scope:

        conn     :: Connection
        withConn :: (Connection -> IO a) -> IO a

   'conn' is a database connection shared by all the tests.
   'withConn' can be used to open additional connections (to the same database).

   'Test' is basically a tree of 'Assertion's, where 'Assertion' is just a type
   alias for IO ().  See the HLint documentation for more information.

 * Add an entry to 'tests' in Main.hs (along with the corresponding
   module import) so the test driver will know about the new module.

 * Add the module to postgresql-simple.cabal, under test-suite > other-modules.
   Otherwise, the module will be left out of the tarball generated by
   `cabal sdist`, and tests will fail to build when installing from Hackage.
